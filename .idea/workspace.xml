<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="0fb1735e-5b10-423c-b7d9-e7a8c0561d05" name="Changes" comment="main_test.py &#10;Minor changes&#10;&#10;main_test3_my_nn.py&#10;Copy of main_test3&#10;Face detection method were changed to torch nn&#10;Added landmarks_to_numerable_list function to make new predictions to the form of old predictions.&#10;&#10;face_detection_utils.py&#10;Added torch model architecture&#10;Added FaceLandmarksPart and FaceLandmarks classes to imitate old predictor&#10;Added preprocess_image function to set image for predictor to a right format">
      <change afterPath="$PROJECT_DIR$/main_test3_my_nn_simage.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/face_calculations.py" beforeDir="false" afterPath="$PROJECT_DIR$/face_calculations.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/face_detection_utils.py" beforeDir="false" afterPath="$PROJECT_DIR$/face_detection_utils.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/main_test3_my_nn.py" beforeDir="false" afterPath="$PROJECT_DIR$/main_test3_my_nn.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;Eflsane&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/Eflsane/face_detection_dlib.git&quot;,
    &quot;accountId&quot;: &quot;b4e7f499-5469-432a-9820-75662fba8ded&quot;
  }
}</component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2faveXQPFjEof5zI38uFfRA1OtH" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Python.face_calculations.executor": "Run",
    "Python.face_detection_utils.executor": "Run",
    "Python.main.executor": "Run",
    "Python.main_test.executor": "Run",
    "Python.main_test2.executor": "Run",
    "Python.main_test3.executor": "Run",
    "Python.main_test3_my_nn.executor": "Run",
    "Python.main_test3_my_nn_simage.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "master",
    "last_opened_file_path": "F:/py_proj/face_detection_dlib",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "configurable.group.tools",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="F:\py_proj\face_detection_dlib" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="F:\py_proj\face_detection_dlib\test_images" />
    </key>
  </component>
  <component name="RunManager">
    <configuration name="main_test" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
      <module name="face_detection_dlib" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/main_test.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-PY-241.17890.14" />
        <option value="bundled-python-sdk-5b207ade9991-7e9c3bbb6e34-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-241.17890.14" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="0fb1735e-5b10-423c-b7d9-e7a8c0561d05" name="Changes" comment="" />
      <created>1714052098483</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1714052098483</updated>
      <workItem from="1719077829595" duration="454000" />
    </task>
    <task id="LOCAL-00001" summary="Project from before using git. &#10;my_file_loader.py&#10;Implemented loading of dlib data files and test video file.&#10;&#10;main_test.py&#10;Implemented face detection with openCV and dlib library.&#10;Implemented eyes closure computation by using Euclidean distance and aspect ratio.&#10;Implemented mouth closure computation by using it's height to width ratio&#10;Implemented computation of the face rotation by three axis X, Y, Z:&#10;For X using nose to left and right side of the face ratio&#10;For Y using from top nose side to chin ratio&#10;For Z using eyes distance and nose tip width ratio.&#10;&#10;main.py&#10;Implemented face detection with openCV and dlib library.&#10;Implemented eyes closure computation by using Euclidean distance and aspect ratio.&#10;Implemented mouth closure computation by using it's height to width ratio&#10;Implemented video steaming to bites and sending it to the local host by using Flask server library">
      <option name="closed" value="true" />
      <created>1714394470037</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1714394470037</updated>
    </task>
    <task id="LOCAL-00002" summary="main_test.py file now added">
      <option name="closed" value="true" />
      <created>1714395523065</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1714395523065</updated>
    </task>
    <task id="LOCAL-00003" summary="main_test.py &#10;Refactored code.&#10;Removed unnecessary comments.&#10;Changed mouth openness calculation: instead of np.linear function that used only x-axis or y-axis of mouth points, now dist.Euclidean function is using.">
      <option name="closed" value="true" />
      <created>1714403261439</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1714403261439</updated>
    </task>
    <task id="LOCAL-00004" summary="main.py&#10;Minor changes&#10;&#10;main_test.py &#10;Refactored code:&#10;All face calculations moved to separate methods &#10;First failed try to calculate smiling value&#10;Removed unnecessary comments.&#10;&#10;main_test2.py&#10;Copy of main_test &#10;Flask server functions implemented:&#10;Sending videostream on http request.&#10;Sending a stream of JSON string of face calculated values on http request.&#10;&#10;main_test3&#10;Copy of main_test2&#10;All face calculation methods were moved to separate file module named &quot;face_calculations&quot;&quot;.&#10;Tcp client functions instead of flask implemented:&#10;Sending a stream of JSON string of face calculated values to tcp server.&#10;&#10;face_calculations.py&#10;Separate module file with all face calculations created.&#10;Changed head Z rotation:&#10;Now using difference between Y and X axis of the eyes to find rotation angle.">
      <option name="closed" value="true" />
      <created>1715254768734</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1715254768734</updated>
    </task>
    <task id="LOCAL-00005" summary="main_test.py &#10;Minor changes&#10;&#10;main_test3_my_nn.py&#10;Copy of main_test3&#10;Face detection method were changed to torch nn&#10;Added landmarks_to_numerable_list function to make new predictions to the form of old predictions.&#10;&#10;face_detection_utils.py&#10;Added torch model architecture&#10;Added FaceLandmarksPart and FaceLandmarks classes to imitate old predictor&#10;Added preprocess_image function to set image for predictor to a right format">
      <option name="closed" value="true" />
      <created>1716147783534</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1716147783534</updated>
    </task>
    <option name="localTasksCounter" value="6" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="master" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Project from before using git." />
    <MESSAGE value="Project from before using git. &#10;my_file_loader.py&#10;Implemented loading of dlib data files and test video file.&#10;&#10;main_test.py&#10;Implemented face detection with openCV and dlib library.&#10;Implemented eyes closure computation by using Euclidean distance and aspect ratio.&#10;Implemented mouth closure computation by using it's height to width ratio&#10;Implemented computation of the face rotation by three axis X, Y, Z:&#10;For X using nose to left and right side of the face ratio&#10;For Y using from top nose side to chin ratio&#10;For Z using eyes distance and nose tip width ratio.&#10;&#10;main.py&#10;Implemented face detection with openCV and dlib library.&#10;Implemented eyes closure computation by using Euclidean distance and aspect ratio.&#10;Implemented mouth closure computation by using it's height to width ratio&#10;Implemented video steaming to bites and sending it to the local host by using Flask server library" />
    <MESSAGE value="main_test.py file now added" />
    <MESSAGE value="main_test.py &#10;Refactored code.&#10;Removed unnecessary comments.&#10;Changed mouth openness calculation: instead of np.linear function that used only x-axis or y-axis of mouth points, now dist.Euclidean function is using." />
    <MESSAGE value="main.py&#10;Minor changes&#10;&#10;main_test.py &#10;Refactored code:&#10;All face calculations moved to separate methods &#10;First failed try to calculate smiling value&#10;Removed unnecessary comments.&#10;&#10;main_test2.py&#10;Copy of main_test &#10;Flask server functions implemented:&#10;Sending videostream on http request.&#10;Sending a stream of JSON string of face calculated values on http request.&#10;&#10;main_test3&#10;Copy of main_test2&#10;All face calculation methods were moved to separate file module named &quot;face_calculations&quot;&quot;.&#10;Tcp client functions instead of flask implemented:&#10;Sending a stream of JSON string of face calculated values to tcp server.&#10;&#10;face_calculations.py&#10;Separate module file with all face calculations created.&#10;Changed head Z rotation:&#10;Now using difference between Y and X axis of the eyes to find rotation angle." />
    <MESSAGE value="main_test.py &#10;Minor changes&#10;&#10;main_test3_my_nn.py&#10;Copy of main_test3&#10;Face detection method were changed to torch nn&#10;Added landmarks_to_numerable_list function to make new predictions to the form of old predictions.&#10;&#10;face_detection_utils.py&#10;Added torch model architecture&#10;Added FaceLandmarksPart and FaceLandmarks classes to imitate old predictor&#10;Added preprocess_image function to set image for predictor to a right format" />
    <option name="LAST_COMMIT_MESSAGE" value="main_test.py &#10;Minor changes&#10;&#10;main_test3_my_nn.py&#10;Copy of main_test3&#10;Face detection method were changed to torch nn&#10;Added landmarks_to_numerable_list function to make new predictions to the form of old predictions.&#10;&#10;face_detection_utils.py&#10;Added torch model architecture&#10;Added FaceLandmarksPart and FaceLandmarks classes to imitate old predictor&#10;Added preprocess_image function to set image for predictor to a right format" />
  </component>
</project>